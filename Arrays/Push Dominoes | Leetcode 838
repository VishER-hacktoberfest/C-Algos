
class Solution {
public:
    string pushDominoes(string s) {
        
        int n = s.size();
        int right = -1;
        
        for(int i = 0;i<n;i++)
        {
            
            if(s[i] == 'L')
            {
                if(right == -1)
                {
                    //CASE -> ...L   HERE RIGHT IS -1
                  for (int j = i - 1; j >= 0 && s[j] == '.'; --j) 
                     s[j] = 'L'; 
                }
                else //right != -1
                {
                    // CASE ->   R.....L   RIGHT IS AT R
                    for(int j = right + 1,k = i-1 ; j < k ;  ++j, --k)
                    {
                        s[j]='R';
                        s[k]='L';
                    }
                    right = -1;  //reset right to -1
                }
            }
            else if(s[i] == 'R') 
            {
                if(right != -1)
                {
                    // CASE -> R ...... R  RIGHT IS AT LEFT R
                    for(int j = right + 1 ; j<i ; j++)
                        s[j]='R';
                }
                right = i ; //reset right to i ( because new right is found ) ;
            }
        }
        // after the complete traversal of i
        if(right != -1)
        {
            for(int j = right + 1 ;j<n;j++)
                s[j]='R';
        }
        
        return s;
    }
};
